name: GitHub CI
on: 
  push:
    tags:
      - '**'
  workflow_dispatch:
  # pull_request:

concurrency: 
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  linux_build:
    strategy:
      matrix:
        include:
          - arch: x86
            artifact: subconverter_linux32
            os: ubuntu-latest
          - arch: amd64
            artifact: subconverter_linux64
            os: ubuntu-latest
          - arch: armv7
            artifact: subconverter_armv7
            os: [self-hosted, linux, ARM]
          - arch: aarch64
            artifact: subconverter_aarch64
            os: [self-hosted, linux, ARM64]
    runs-on: ${{ matrix.os }}
    name: Linux ${{ matrix.arch }} Build
    steps:
    - name: Checkout base
      uses: actions/checkout@v4
    - name: Add commit id into version
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: SHA=$(git rev-parse --short HEAD) && sed -i 's/\(v[0-9]\.[0-9]\.[0-9]\)/\1-'"$SHA"'/' src/version.h
    - name: Build
      run: docker run --rm -v $GITHUB_WORKSPACE:/root/workdir multiarch/alpine:${{ matrix.arch }}-latest-stable /bin/sh -c "apk add bash git nodejs npm && cd /root/workdir && chmod +x scripts/build.alpine.release.sh && bash scripts/build.alpine.release.sh"
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: subconverter/
    - name: Package Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      run: tar czf ${{ matrix.artifact }}.tar.gz subconverter
    - name: Draft Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      uses: softprops/action-gh-release@v2
      with:
        files: subconverter_linux32.tar.gz
        draft: true

  linux64_build:
    name: Linux x86_64 Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Add commit id into version
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: SHA=$(git rev-parse --short HEAD) && sed -i 's/\(v[0-9]\.[0-9]\.[0-9]\)/\1-'"$SHA"'/' src/version.h
    - name: Build
      run: docker run --rm -v $GITHUB_WORKSPACE:/root/workdir multiarch/alpine:amd64-latest-stable /bin/sh -c "apk add bash git nodejs npm && cd /root/workdir && chmod +x scripts/build.alpine.release.sh && bash scripts/build.alpine.release.sh"
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: subconverter_linux64
        path: subconverter/
    - name: Package Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      run: tar czf subconverter_linux64.tar.gz subconverter
    - name: Draft Release
      uses: softprops/action-gh-release@v1
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      with:
        files: subconverter_linux64.tar.gz
        draft: true

  # armv7_build:
  #   name: Linux armv7 Build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Add commit id into version
  #     if: ${{ !startsWith(github.ref, 'refs/tags/') }}
  #     run: SHA=$(git rev-parse --short HEAD) && sed -i 's/\(v[0-9]\.[0-9]\.[0-9]\)/\1-'"$SHA"'/' src/version.h
  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v2
  #   - name: Build
  #     run: docker run --rm -v $GITHUB_WORKSPACE:/root/workdir multiarch/alpine:armv7-latest-stable /bin/sh -c "apk add bash git nodejs npm && cd /root/workdir && chmod +x scripts/build.alpine.release.sh && bash scripts/build.alpine.release.sh"
  #   - name: Upload
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: subconverter_armv7
  #       path: subconverter/
  #   - name: Package Release
  #     if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
  #     run: tar czf subconverter_armv7.tar.gz subconverter
  #   - name: Draft Release
  #     uses: softprops/action-gh-release@v1
  #     if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
  #     with:
  #       files: subconverter_armv7.tar.gz
  #       draft: true

  # aarch64_build:
  #   name: Linux aarch64 Build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Add commit id into version
  #     if: ${{ !startsWith(github.ref, 'refs/tags/') }}
  #     run: SHA=$(git rev-parse --short HEAD) && sed -i 's/\(v[0-9]\.[0-9]\.[0-9]\)/\1-'"$SHA"'/' src/version.h
  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v2
  #   - name: Build
  #     run: docker run --rm -v $GITHUB_WORKSPACE:/root/workdir multiarch/alpine:aarch64-latest-stable /bin/sh -c "apk add bash git nodejs npm && cd /root/workdir && chmod +x scripts/build.alpine.release.sh && bash scripts/build.alpine.release.sh"
  #   - name: Upload
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: subconverter_aarch64
  #       path: subconverter/
  #   - name: Package Release
  #     if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
  #     run: tar czf subconverter_aarch64.tar.gz subconverter
  #   - name: Draft Release
  #     uses: softprops/action-gh-release@v1
  #     if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
  #     with:
  #       files: subconverter_aarch64.tar.gz
  #       draft: true

  macos_build:
    strategy:
      matrix:
        include:
          - arch: x86
            artifact: subconverter_darwin64
            os: macos-13
          - arch: arm
            artifact: subconverter_darwinarm
            os: macos-14
    runs-on: ${{ matrix.os }}
    name: macOS ${{ matrix.arch }} Build
    steps:
    - name: Checkout base
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Add commit id into version
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: SHA=$(git rev-parse --short HEAD) && sed -i -e 's/\(v[0-9]\.[0-9]\.[0-9]\)/\1-'"$SHA"'/' src/version.h
    - name: Build
      run: bash scripts/build.macos.release.sh
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: subconverter/
    - name: Package Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      run: tar czf ${{ matrix.artifact }}.tar.gz subconverter
    - name: Draft Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ matrix.artifact }}.tar.gz
        draft: true
  
  windows_build:
    strategy:
      matrix:
        include:
          - arch: x86
            artifact: subconverter_win32
            env: i686
            msystem: MINGW32
          - arch: amd64
            artifact: subconverter_win64
            env: x86_64
            msystem: MINGW64
    runs-on: windows-latest
    name: Windows ${{ matrix.arch }} Build
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - name: Checkout base
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16'
    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: base-devel git mingw-w64-${{ matrix.env }}-gcc mingw-w64-${{ matrix.env }}-cmake mingw-w64-${{ matrix.env }}-pcre2 patch
        msystem: ${{ matrix.msystem }}
        path-type: inherit
    - name: Add commit id into version
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      run: SHA=$(git rev-parse --short HEAD) && sed -i 's/\(v[0-9]\.[0-9]\.[0-9]\)/\1-'"$SHA"'/' src/version.h
    - name: Build
      run: bash scripts/build.windows.release.sh
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: subconverter/
        retention-days: 1

    - name: Package Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      run: 7z a ${{ matrix.artifact }}.7z subconverter/

    - name: Draft Release
      if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ matrix.artifact }}.7z
        draft: true

  upload_prerelease:
    permissions: write-all
    needs: [linux_build, linux64_build, macos_build, windows_build]
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
        patterns: subconverter*
        path: bin
    - name: Display files
      run: tree && ls -l bin
      working-directory: bin
    
    - name: Delete Current Release Assets
      uses: 8Mi-Tech/delete-release-assets-action@main
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: 'pre-release'
        deleteOnlyFromDrafts: false
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      if: ${{ success() }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: bin/*
        name: 'pre-release'
        tag_name: 'pre-release'
        prerelease: true
